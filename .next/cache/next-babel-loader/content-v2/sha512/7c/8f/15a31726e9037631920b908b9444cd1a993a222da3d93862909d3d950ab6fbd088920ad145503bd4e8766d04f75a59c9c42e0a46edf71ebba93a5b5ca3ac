{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/peynao/Documents/Datos/Front End Developer/NextJS/Section 12/nextjs-course-code-07849776424a7b0f111804e1130acc4e61169252/components/posts/post-detail/post-content.js\";\nimport ReactMarkdown from \"react-markdown\";\nimport Image from \"next/image\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { atomDark } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\nimport PostHeader from \"./post-header\";\nimport classes from \"./post-content.module.css\";\n\nfunction PostContent(props) {\n  const {\n    post\n  } = props;\n  const imagePath = `/images/posts/${post.slug}/${post.image}`;\n  console.log(\"imagePath: \", imagePath);\n  const customRenderers = {\n    p(paragraph) {\n      const {\n        node\n      } = paragraph;\n\n      if (node.children[0].tagName === \"img\") {\n        const image = node.children[0];\n        console.log(\"IMG SRC: \", image.properties.src);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.image,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: `${image.properties.src}`,\n            alt: image.alt,\n            width: 600,\n            height: 300\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: paragraph.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this);\n    },\n\n    code(code) {\n      const {\n        className,\n        children\n      } = code;\n      const language = className.split(\"-\")[1]; // className is something like language-js => We need the \"js\" part here\n\n      return /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n        style: atomDark,\n        language: language,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    }\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: classes.content,\n    children: [/*#__PURE__*/_jsxDEV(PostHeader, {\n      title: post.title,\n      image: imagePath\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n      components: customRenderers,\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\nexport default PostContent;","map":{"version":3,"sources":["/Users/peynao/Documents/Datos/Front End Developer/NextJS/Section 12/nextjs-course-code-07849776424a7b0f111804e1130acc4e61169252/components/posts/post-detail/post-content.js"],"names":["ReactMarkdown","Image","Prism","SyntaxHighlighter","atomDark","PostHeader","classes","PostContent","props","post","imagePath","slug","image","console","log","customRenderers","p","paragraph","node","children","tagName","properties","src","alt","code","className","language","split","content","title"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,gBAA1B;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,KAAK,IAAIC,iBAAlB,QAA2C,0BAA3C;AACA,SAASC,QAAT,QAAyB,gDAAzB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AAEA,QAAME,SAAS,GAAI,iBAAgBD,IAAI,CAACE,IAAK,IAAGF,IAAI,CAACG,KAAM,EAA3D;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BJ,SAA3B;AACA,QAAMK,eAAe,GAAG;AACtBC,IAAAA,CAAC,CAACC,SAAD,EAAY;AACX,YAAM;AAAEC,QAAAA;AAAF,UAAWD,SAAjB;;AACA,UAAIC,IAAI,CAACC,QAAL,CAAc,CAAd,EAAiBC,OAAjB,KAA6B,KAAjC,EAAwC;AACtC,cAAMR,KAAK,GAAGM,IAAI,CAACC,QAAL,CAAc,CAAd,CAAd;AAEAN,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAK,CAACS,UAAN,CAAiBC,GAA1C;AACA,4BACE;AAAK,UAAA,SAAS,EAAEhB,OAAO,CAACM,KAAxB;AAAA,iCACE,QAAC,KAAD;AACE,YAAA,GAAG,EAAG,GAAEA,KAAK,CAACS,UAAN,CAAiBC,GAAI,EAD/B;AAEE,YAAA,GAAG,EAAEV,KAAK,CAACW,GAFb;AAGE,YAAA,KAAK,EAAE,GAHT;AAIE,YAAA,MAAM,EAAE;AAJV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAUD;;AAED,0BAAO;AAAA,kBAAIN,SAAS,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KApBqB;;AAsBtBK,IAAAA,IAAI,CAACA,IAAD,EAAO;AACT,YAAM;AAAEC,QAAAA,SAAF;AAAaN,QAAAA;AAAb,UAA0BK,IAAhC;AACA,YAAME,QAAQ,GAAGD,SAAS,CAACE,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAjB,CAFS,CAEiC;;AAC1C,0BACE,QAAC,iBAAD;AACE,QAAA,KAAK,EAAEvB,QADT;AAEE,QAAA,QAAQ,EAAEsB,QAFZ;AAGE,QAAA,QAAQ,EAAEP;AAHZ;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;;AAhCqB,GAAxB;AAmCA,sBACE;AAAS,IAAA,SAAS,EAAEb,OAAO,CAACsB,OAA5B;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEnB,IAAI,CAACoB,KAAxB;AAA+B,MAAA,KAAK,EAAEnB;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,UAAU,EAAEK,eAA3B;AAAA,gBAA6CN,IAAI,CAACmB;AAAlD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;AAED,eAAerB,WAAf","sourcesContent":["import ReactMarkdown from \"react-markdown\";\r\nimport Image from \"next/image\";\r\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport { atomDark } from \"react-syntax-highlighter/dist/cjs/styles/prism\";\r\n\r\nimport PostHeader from \"./post-header\";\r\nimport classes from \"./post-content.module.css\";\r\n\r\nfunction PostContent(props) {\r\n  const { post } = props;\r\n\r\n  const imagePath = `/images/posts/${post.slug}/${post.image}`;\r\n\r\n  console.log(\"imagePath: \", imagePath);\r\n  const customRenderers = {\r\n    p(paragraph) {\r\n      const { node } = paragraph;\r\n      if (node.children[0].tagName === \"img\") {\r\n        const image = node.children[0];\r\n\r\n        console.log(\"IMG SRC: \", image.properties.src);\r\n        return (\r\n          <div className={classes.image}>\r\n            <Image\r\n              src={`${image.properties.src}`}\r\n              alt={image.alt}\r\n              width={600}\r\n              height={300}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return <p>{paragraph.children}</p>;\r\n    },\r\n\r\n    code(code) {\r\n      const { className, children } = code;\r\n      const language = className.split(\"-\")[1]; // className is something like language-js => We need the \"js\" part here\r\n      return (\r\n        <SyntaxHighlighter\r\n          style={atomDark}\r\n          language={language}\r\n          children={children}\r\n        />\r\n      );\r\n    },\r\n  };\r\n\r\n  return (\r\n    <article className={classes.content}>\r\n      <PostHeader title={post.title} image={imagePath} />\r\n      <ReactMarkdown components={customRenderers}>{post.content}</ReactMarkdown>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default PostContent;\r\n"]},"metadata":{},"sourceType":"module"}